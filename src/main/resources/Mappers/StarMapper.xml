<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.movie.star.mapper.StarMapper">
	<!-- 특정 영화에 특정 유저가 좋아요 눌렀는지 여부 - db에서 count(*) select -->
	<select id="selectStarCountByMovieIdAndUserOriginId" resultType="int">
		SELECT
			COUNT(*)
		FROM
			`star`
		WHERE
			`movieId` = #{movieId}
		AND
			`userId` = #{userOriginId}
	</select>
	
	<!-- 특정 영화에 특정 유저가 n점 별점 매기기 - db에 insert -->
	<insert id="insertStarByMovieIdAndUserOriginIdAndPoint" parameterType="map">
		INSERT INTO `star`
		(
			`movieId`
			,`userId`
			,`point`
			,`createdAt`
			,`updatedAt`
		)
		VALUES
		(
			#{movieId}
			, #{userOriginId}
			, #{point}
			, NOW()
			, NOW()
		)
	</insert>
	
	<!-- 별점 수정하기 - db에서 update -->
	<update id="updateStarByMovieIdAndUserOriginIdAndPoint" parameterType="map">
		UPDATE `star`
		SET
			`point` = #{point}
		WHERE
			`movieId` = #{movieId}
		AND
			`userId` = #{userOriginId}
	</update>
	
	<!-- 특정 영화에 특정 유저가 매긴 별점 삭제 - db에서 delete -->
	<delete id="deleteStarByMovieIdAndUserOriginId" parameterType="map">
		DELETE FROM `star`
		WHERE
			`movieId` = #{movieId}
		AND
			`userId` = #{userOriginId}
	</delete>
	
	<!-- 특정 유저가 특정 영화에 '몇 점'을 매겼나 알아내는 메소드 - db에서 int(point) select -->
	<!-- 지금 로그인된 유저의 별점만 가져오는 문제 -->
	<select id="selectPointByMovieIdAndUserOriginId" resultType="Integer">
		SELECT 
			`point`
		FROM 
			`star`
		WHERE
			`movieId` = #{movieId}
		AND
			`userId` = #{userOriginId}
	</select>
	
	<!-- 특정 영화의 특정 유저가 매긴 별점 정보 일단 가져오기 - db에서 select -->
	<select id="selectStarInfoByMovieIdAndUserOriginId" resultType="com.movie.star.domain.Star">
		SELECT 
			`id`
			,`movieId`
			,`userId`
			,`point`
			,`createdAt`
			,`updatedAt`
		FROM 
			`star`
		WHERE
			`movieId` = #{movieId}
		AND
			`userId` = #{userOriginId}
	</select>
	
	<!-- 특정 영화의 별점 가져오기 - db에서 select -->
	<select id="selectPointByMovieId" resultType="double">
		SELECT AVG(`point`) 
		FROM 
			`star`
		WHERE 
			`movieId` = #{movieId}
		GROUP BY
			`movieId`;
	</select>
	
	<!-- 특정 영화에 몇 명의 유저들이 몇점을 매겼는지 가져오기 - db에서 count select -->
	<select id="selectCountByMovieId" resultType="integer">
		SELECT COUNT(*)
		FROM
			`star`
		WHERE
			`movieId` = #{movieId}
	</select>
	
	<!-- 0822 오후 -->
	<!-- 특정 유저가 특정 영화에 별점 몇점을 매겼나 - db에서 point select -->
	<select id="selectPointByMovieIdAndUserId" resultType="Integer">
		SELECT 
			`point`
		FROM
			`star`
		WHERE
			`movieId` = #{movieId}
		AND
			`userId` = #{userId}
	</select>
	
	<!-- 현재 로그인 된 유저가 매긴 전체 별점 평균 -db에서 select / 0826 -->
	<select id="selectAvgPointByUser" resultType="Integer">
		SELECT AVG(`point`) 
		FROM 
			`star`
		WHERE 
			`userId` = #{userOriginId}
		GROUP BY
			`userId`
	</select>
	
	<!-- 현재 로그인 된 유저가 별점을 매긴 영화의 고유idovieId) 목록 - db에서 list select / 0826 -->
	<select id="selectMovieIdListByUserOriginId" resultType="Integer">
		SELECT 
			`movieId` 
		FROM
			`star`
		WHERE
			`userId` = #{userOriginId}
	</select>
	
	<!-- 현재 로그인 되어있는 유저가 별점을 매긴 영화의 총 개수 가져오기 - db에서 count select / 0827 -->
	<select id="selectTotalStarCountByUserOriginId" resultType="int">
		SELECT COUNT(*)
		FROM
			`star`
		WHERE
			`userId` = #{userOriginId}
	</select>
</mapper>