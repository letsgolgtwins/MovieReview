<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.movie.User.mapper.UserMapper">
	<!-- 아이디 중복확인 - db에서 select -->
	<select id="selectCountByUserId" resultType="int">
		SELECT COUNT(*)
		FROM 
			`user`
		WHERE
			`userId` = #{userId}
	</select>
	
	<!-- 회원가입 - db에 insert -->
	<insert id="insertUserSignUp" parameterType="map">
		INSERT INTO `user`
		(
			`userId`
			,`userPassword`
			,`userName`
			,`userNickName`
			,`createdAt`
			,`updatedAt`
		)
		VALUES
		(
			#{userId}
			, #{hashedUserPassword}
			, #{userName}
			, #{userNickName}
			, NOW()
			, NOW()
		)
	</insert>
	
	<!-- 로그인 - db에서 select -->
	<select id="selectUserByUserIdAndUserPassword" parameterType="map" resultType="com.movie.User.domain.User">
		SELECT 
			`id`
			,`userId`
			,`userPassword`
			,`userName`
			,`userNickName`
			,`createdAt`
			,`updatedAt`
		FROM
			`user`
		WHERE
			`userId` = #{userId}
		AND
			`userPassword` = #{userPassword}
	</select>
	
	<!-- 뉴 아이디 중복확인 - db에서 select -->
	<select id="selectDuplicateCount" resultType="int">
		SELECT COUNT(*)
		FROM 	
			`user`
		WHERE
			`userId` = #{newUserId}
	</select>
	
	<!-- 아이디 변경 - db에서 update / 0828 -->
	<update id="updateId" parameterType="map">
		UPDATE `user`
		SET
			`userId` = #{newUserId}
			, `updatedAt` = NOW()
		WHERE
			`id` = #{userOriginId}
	</update>
	
	<!-- 비밀번호 변경 - db에서 update / 0828 -->
	<update id="updatePassword" parameterType="map">
		UPDATE `user`
		SET
			`userPassword` = #{hashedNewUserPassword}
			, `updatedAt` = NOW()
		WHERE
			`id` = #{userOriginId}
	</update>
	
	<!-- 닉네임 변경 - db에서 update / 0828 -->
	<update id="updateNickName" parameterType="map">
		UPDATE `user`
		SET
			`userNickName` = #{newUserNickName}
			, `updatedAt` = NOW()
		WHERE
			`id` = #{userOriginId}
	</update>
	
	<!-- 회원 탈퇴하기 - db에서 delete / 0829 -->
	<delete id="deleteUser" parameterType="int">
		DELETE FROM 
			`user`
		WHERE
			`id` = #{userOriginId}
	</delete>
</mapper>